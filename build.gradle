apply plugin: 'com.android.library'

def rootConfigurations = rootProject.ext.configurations
def rootLibraries = rootProject.ext.libraries

android {
    compileSdkVersion rootConfigurations.compileSdkVersion
    buildToolsVersion rootConfigurations.buildToolsVersion

    defaultConfig {
        minSdkVersion rootConfigurations.minSdkVersion
        targetSdkVersion rootConfigurations.targetSdkVersion
        versionCode 100
        versionName "1.0.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
//            debuggable true
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
//            debuggable false
//            minifyEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    resourcePrefix "asm_gvr_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:${rootLibraries.androidxAppCompatVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootLibraries.androidxConstraintLayoutVersion}"
    implementation "androidx.coordinatorlayout:coordinatorlayout:${rootLibraries.androidxCoordinatorLayoutVersion}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootLibraries.androidxLifecycleExtensionsVersion}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${rootLibraries.androidxLifecycleCommonJava8Version}"
    implementation "androidx.navigation:navigation-fragment:${rootLibraries.androidxNavigationVersion}"
    implementation "androidx.navigation:navigation-ui:${rootLibraries.androidxNavigationVersion}"
    implementation "androidx.documentfile:documentfile:${rootLibraries.androidxDocumentFileVersion}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootLibraries.androidxSwipeRefreshLayoutVersion}"
    implementation "com.afollestad.material-dialogs:core:${rootLibraries.materialDialogVersion}"
    implementation "androidx.viewpager2:viewpager2:${rootLibraries.androidxViewPager2Version}"

    implementation "com.jakewharton.timber:timber:${rootLibraries.timberVersion}"
    implementation("com.github.bumptech.glide:glide:${rootLibraries.glideVersion}") {
        exclude group: "com.android.support"
    }
    implementation "commons-io:commons-io:${rootLibraries.commonIoVersion}"
    implementation "com.google.android.material:material:${rootLibraries.androidMaterialVersion}"
    implementation "androidx.tonyodev.fetch2:xfetch2:${rootLibraries.fetch2Version}"
    implementation "com.google.code.gson:gson:${rootLibraries.gsonVersion}"
    implementation "com.danikula:videocache:${rootLibraries.videoCacheVersion}"
    implementation "com.vincan:medialoader:${rootLibraries.medialoaderVersion}"

    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-core:${rootLibraries.FFmpegMediaMetadataRetrievercore}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-armeabi-v7a:${rootLibraries.FFmpegMediaMetadataRetriever_armeabi_v7a}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-x86_64:${rootLibraries.FFmpegMediaMetadataRetrieverx86_64}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-arm64-v8a:${rootLibraries.FFmpegMediaMetadataRetriever_arm64_v8a}"
}
