apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.android.library'

def rootConfigurations = rootProject.ext.configurations
def rootLibraries = rootProject.ext.libraries

android {
    compileSdkVersion rootConfigurations.compileSdkVersion
    buildToolsVersion rootConfigurations.buildToolsVersion

    defaultConfig {
        minSdkVersion rootConfigurations.minSdkVersion
        targetSdkVersion rootConfigurations.targetSdkVersion
        versionCode 100
        versionName "1.0.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false
            minifyEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    resourcePrefix "asm_gvr_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.appcompat:appcompat:${rootLibraries.androidxAppCompatVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${rootLibraries.androidxConstraintLayoutVersion}"
    implementation "androidx.coordinatorlayout:coordinatorlayout:${rootLibraries.androidxCoordinatorLayoutVersion}"
    implementation "androidx.lifecycle:lifecycle-extensions:${rootLibraries.androidxLifecycleExtensionsVersion}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${rootLibraries.androidxLifecycleCommonJava8Version}"
    implementation "androidx.navigation:navigation-fragment:${rootLibraries.androidxNavigationVersion}"
    implementation "androidx.navigation:navigation-ui:${rootLibraries.androidxNavigationVersion}"
    implementation "androidx.documentfile:documentfile:${rootLibraries.androidxDocumentFileVersion}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootLibraries.androidxSwipeRefreshLayoutVersion}"
    implementation "com.afollestad.material-dialogs:core:${rootLibraries.materialDialogVersion}"
    implementation "androidx.viewpager2:viewpager2:${rootLibraries.androidxViewPager2Version}"

    implementation "com.jakewharton.timber:timber:${rootLibraries.timberVersion}"
    implementation("com.github.bumptech.glide:glide:${rootLibraries.glideVersion}") {
        exclude group: "com.android.support"
    }
    implementation "commons-io:commons-io:${rootLibraries.commonIoVersion}"
    implementation "com.google.android.material:material:${rootLibraries.androidMaterialVersion}"
    implementation "androidx.tonyodev.fetch2:xfetch2:${rootLibraries.fetch2Version}"
    implementation "com.google.code.gson:gson:${rootLibraries.gsonVersion}"
    implementation "com.danikula:videocache:${rootLibraries.videoCacheVersion}"
    implementation "com.vincan:medialoader:${rootLibraries.medialoaderVersion}"

    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-core:${rootLibraries.FFmpegMediaMetadataRetrievercore}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-x86:${rootLibraries.FFmpegMediaMetadataRetrieverx86}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-x86_64:${rootLibraries.FFmpegMediaMetadataRetrieverx86_64}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-arm64-v8a:${rootLibraries.FFmpegMediaMetadataRetriever_arm64_v8a}"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever-native-armeabi-v7a:${rootLibraries.FFmpegMediaMetadataRetriever_armeabi_v7a}"
}

publish {
    userOrg = 'alcodes'
    groupId = 'com.alcodes'
    artifactId = 'alcodes-gallery-viewer'
    publishVersion = '1.0.0'
    desc = 'First Release'
    website = 'https://github.com/AlcAndroid2020/alcodes-gallery-viewer'
}

//apply plugin: 'com.jfrog.bintray'
//apply plugin: 'com.github.dcendents.android-maven'
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            packaging 'aar'
//            groupId "com.alcodes"
//            version "1.0.0"
//            name "alcodes-gallery-viewer" // pom.project.name must be same as bintray.pkg.name
//            url "https://github.com/AlcAndroid2020/alcodes-gallery-viewer"
//            inceptionYear '2020' // HARDCODED
//            licenses {
//                license { // HARDCODED
//                    name 'The Apache Software License, Version 2.0'
//                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    distribution 'repo'
//                }
//            }
//            scm {
//                connection "https://github.com/AlcAndroid2020/alcodes-gallery-viewer.git"
//                developerConnection "https://github.com/AlcAndroid2020/alcodes-gallery-viewer.git"
//                url "https://github.com/AlcAndroid2020/alcodes-gallery-viewer"
//            }
//            developers {
//                developer {
//                    name 'Yong Xian'
//                }
//            }
//        }
//    }
//}
//
//def properties = new Properties()
//properties.load(new FileInputStream("local.properties"))
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        userOrg = 'alcodes'
//        repo = "Gallery-Viewer"
//        name = "alcodes-gallery-viewer"
//        websiteUrl = "https://github.com/AlcAndroid2020/alcodes-gallery-viewer"
//        vcsUrl = "https://github.com/AlcAndroid2020/alcodes-gallery-viewer.git"
//        licenses = ["Apache-2.0"]
//        publish = true
//        publicDownloadNumbers = true
//        version {
//            name = "1.0.1"
//        }
//    }
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//    // options.encoding = 'UTF-8'
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}

